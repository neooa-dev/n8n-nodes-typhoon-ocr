#version: '3.8'

x-defaults: &defaults
  environment:
    - DOCKER_DEFAULT_PLATFORM=linux/arm64
  deploy:
    resources:
      limits:
        cpus: '2'

services:
  n8n:
    <<: *defaults
    image: n8nio/n8n:latest
    platform: linux/arm64
    restart: always
    ports:
      - "5678:5678"
    env_file:
      - .env
    environment:
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=${N8N_PORT:-5678}
      - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
      - NODE_ENV=${NODE_ENV:-production}
      - DB_TYPE=${DB_TYPE:-postgresdb}
      - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST:-postgres}
      - DB_POSTGRESDB_PORT=${DB_POSTGRESDB_PORT:-5432}
      - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE:-n8n}
      - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD:-n8n}
      - TYPHOON_OCR_API_KEY=${TYPHOON_OCR_API_KEY}
      - TYPHOON_OCR_URL=${TYPHOON_OCR_URL:-http://typhoon-ocr:8000}
    deploy:
      resources:
        limits:
          memory: 4G
    volumes:
      - ./datas/n8n:/home/node/.n8n:delegated
    depends_on:
      - postgres
      - typhoon-ocr
    networks:
      - n8n-tools

  postgres:
    <<: *defaults
    image: postgres:15
    platform: linux/arm64
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-n8n}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-n8n}
      - POSTGRES_DB=${POSTGRES_DB:-n8n}
      - POSTGRES_NON_ROOT_USER=${POSTGRES_NON_ROOT_USER:-n8n}
      - POSTGRES_NON_ROOT_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD:-n8n}
    deploy:
      resources:
        limits:
          memory: 2G
    volumes:
      - ./datas/postgres:/var/lib/postgresql/data:delegated
    networks:
      - n8n-tools

  ollama:
    <<: *defaults
    image: ollama/ollama:latest
    platform: linux/arm64
    restart: always
    ports:
      - "11434:11434"
    env_file:
      - .env
    environment:
      - OLLAMA_HOST=0.0.0.0
    deploy:
      resources:
        limits:
          memory: 4G
    volumes:
      - ./datas/ollama:/root/.ollama:delegated
    networks:
      - n8n-tools

  qdrant:
    <<: *defaults
    image: qdrant/qdrant:latest
    platform: linux/arm64
    restart: always
    ports:
      - "6333:6333"
      - "6334:6334"
    env_file:
      - .env
    deploy:
      resources:
        limits:
          memory: 2G
    volumes:
      - ./datas/qdrant:/qdrant/storage:delegated
    networks:
      - n8n-tools

  typhoon-ocr:
    <<: *defaults
    build:
      context: ./typhoon-ocr
      dockerfile: Dockerfile
    platform: linux/arm64
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - .env
    deploy:
      resources:
        limits:
          memory: 2G
    volumes:
      - ./datas/typhoon-ocr:/app/data:delegated
    environment:
      - TYPHOON_OCR_API_KEY=${TYPHOON_OCR_API_KEY}
      - TYPHOON_OCR_HOST=${TYPHOON_OCR_HOST:-0.0.0.0}
      - TYPHOON_OCR_PORT=${TYPHOON_OCR_PORT:-8000}
    networks:
      - n8n-tools

  minio:
    <<: *defaults
    image: minio/minio:latest
    platform: linux/arm64
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - .env
    volumes:
      - ./datas/minio:/data:delegated
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-admin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-miniopassword}
    command: server /data --console-address ":9001"
    deploy:
      resources:
        limits:
          memory: 2G
    networks:
      - n8n-tools

  minio-init:
    <<: *defaults
    image: minio/mc:latest
    platform: linux/arm64
    restart: "no"
    depends_on:
      - minio
    env_file:
      - .env
    volumes:
      - ./scripts/init-minio.sh:/init-minio.sh
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-admin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-miniopassword}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME:-nca-toolkit}
      - MINIO_BUCKET_PUBLIC=${MINIO_BUCKET_PUBLIC:-false}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
    entrypoint: ["sh"]
    command: ["/init-minio.sh"]
    networks:
      - n8n-tools

  nca-toolkit:
    <<: *defaults
    image: stephengpope/no-code-architects-toolkit:latest
    platform: linux/amd64
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - ./datas/nca-toolkit:/app/data:delegated
    environment:
      - API_KEY=${NCA_API_KEY:-}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - S3_REGION=${S3_REGION:-None}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
    depends_on:
      - minio
      - minio-init
    deploy:
      resources:
        limits:
          memory: 2G
    networks:
      - n8n-tools

networks:
  n8n-tools:
    driver: bridge
